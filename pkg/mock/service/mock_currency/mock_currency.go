// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/service/currency/currency.go

// Package mock_currency is a generated GoMock package.
package mock_currency

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	currency "github.com/romik1505/balance-service/internal/service/currency"
)

// MockICurrencyService is a mock of ICurrencyService interface.
type MockICurrencyService struct {
	ctrl     *gomock.Controller
	recorder *MockICurrencyServiceMockRecorder
}

// MockICurrencyServiceMockRecorder is the mock recorder for MockICurrencyService.
type MockICurrencyServiceMockRecorder struct {
	mock *MockICurrencyService
}

// NewMockICurrencyService creates a new mock instance.
func NewMockICurrencyService(ctrl *gomock.Controller) *MockICurrencyService {
	mock := &MockICurrencyService{ctrl: ctrl}
	mock.recorder = &MockICurrencyServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockICurrencyService) EXPECT() *MockICurrencyServiceMockRecorder {
	return m.recorder
}

// GetExchangeRate mocks base method.
func (m *MockICurrencyService) GetExchangeRate(ctx context.Context, currencyCode string) (float32, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetExchangeRate", ctx, currencyCode)
	ret0, _ := ret[0].(float32)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetExchangeRate indicates an expected call of GetExchangeRate.
func (mr *MockICurrencyServiceMockRecorder) GetExchangeRate(ctx, currencyCode interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetExchangeRate", reflect.TypeOf((*MockICurrencyService)(nil).GetExchangeRate), ctx, currencyCode)
}

// RequestExchangeRates mocks base method.
func (m *MockICurrencyService) RequestExchangeRates(ctx context.Context) (currency.ExchangeServiceResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RequestExchangeRates", ctx)
	ret0, _ := ret[0].(currency.ExchangeServiceResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RequestExchangeRates indicates an expected call of RequestExchangeRates.
func (mr *MockICurrencyServiceMockRecorder) RequestExchangeRates(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RequestExchangeRates", reflect.TypeOf((*MockICurrencyService)(nil).RequestExchangeRates), ctx)
}
